stages:
- stage: BuildPackSource
  jobs:
  - job: BuildCome
    displayName: Build System.Maui
    pool:
      vmImage: 'windows-2019'
      demands:
      - MSBuild
      - Xamarin.Android

    steps:
    - task: Bash@3
      displayName: 'Version Script'
      inputs:
        targetType: 'inline'
        script: |
          echo '$(Build_BuildID)' $BUILD_BUILDID
                  BUILDNUMBER=$BUILD_BUILDID
                  VERSION=0.1.$BUILDNUMBER-alpha
                  echo 'VERSION ' $VERSION
                  
                  #if ! [ $BRANCH = master ]; then
                  #   VERSION=1.0.$BUILDNUMBER
                  #    echo "##vso[build.updatebuildnumber]$VERSION"
                  #fi;
                  
                  echo "##vso[task.setvariable variable=Version]$VERSION"

    - task: NuGetToolInstaller@1
      displayName: Use Nuget 5.0.2
      inputs:
        versionSpec: '5.0.2'

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Nuget.sln

    - task: MSBuild@1
      displayName: 'Build System.Maui'
      inputs:
        solution: 'src/System.Maui/System.Maui.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build Xamarin.Forms.Loader.csproj'
      inputs:
        solution: 'src/Xamarin.Forms.Loader/Xamarin.Forms.Loader.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Android'
      inputs:
        solution: 'src/System.Maui.Android/System.Maui.Android.csproj'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:JavaSdkDirectory="$(JAVA_HOME_8_X64)"'

    - task: MSBuild@1
      displayName: 'Build System.Maui.iOS'
      inputs:
        solution: 'src/System.Maui.iOS/System.Maui.iOS.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Mac'
      inputs:
        solution: 'src/System.Maui.Mac/System.Maui.Mac.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia'
      inputs:
        solution: 'src/System.Maui.Skia/System.Maui.Skia.csproj'
        configuration: '$(BuildConfiguration)'
    
    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.Android'
      inputs:
        solution: 'src/System.Maui.Skia.Android/System.Maui.Skia.Android.csproj'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:JavaSdkDirectory="$(JAVA_HOME_8_X64)"'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.iOS'
      inputs:
        solution: 'src/System.Maui.Skia.iOS/System.Maui.Skia.iOS.csproj'
        configuration: '$(BuildConfiguration)'
        
    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.Mac'
      inputs:
        solution: 'src/System.Maui.Skia.Mac/System.Maui.Skia.Mac.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.UWP'
      inputs:
        solution: 'src/System.Maui.UWP/System.Maui.UWP.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.WPF'
      inputs:
        solution: 'src/System.Maui.WPF/System.Maui.WPF.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.UWP'
      inputs:
        solution: 'src/System.Maui.Skia.UWP/System.Maui.Skia.UWP.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.WPF'
      inputs:
        solution: 'src/System.Maui.Skia.WPF/System.Maui.Skia.WPF.csproj'
        configuration: '$(BuildConfiguration)'

    - task: NuGetCommand@2
      displayName: 'dotnet pack System.Maui.nuspec'
      inputs:
        command: pack
        packagesToPack: 'System.Maui.nuspec'
        versioningScheme: byEnvVar
        versionEnvVar: VERSION

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**\*.nupkg'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
   
    - script: echo Publish Nuget Github the code!

    - task: Bash@3
      inputs:
        targetType: 'inline'
        script: |
          # Write your commands here
          
          nuget source Add -Name "GHNuget" \
               -Source "https://nuget.pkg.github.com/Clancey/index.json" \
               -UserName Clancey -Password $(gp)
          
          nuget push $(Build.ArtifactStagingDirectory)/**/*.nupkg -Source "GHNuget"

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_nuget_alpha'
        publishLocation: 'Container'

    

    # - task: NuGetCommand@2
    #   inputs:
    #     command: 'push'
    #     packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    #     nuGetFeedType: 'external'
    #     publishFeedCredentials: 'ClanceyGitHubPackages'

    