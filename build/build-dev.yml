# specific branch build
trigger:
  branches:
    include:
      - dev
      - master
pr:
  - dev
  - master
  - releases/*

stages:
- stage: BuildSource
  jobs:
  - job: BuildSystem.MauiBlazor
    displayName: Build System.Maui Blazor
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core sdk'
        inputs:
          packageType: sdk
          version: $(DotNetVersion)
          includePreviewVersions: true
          installationPath: $(Agent.ToolsDirectory)/dotnet
      - task: DotNetCoreCLI@2
        displayName: 'Build Blazor'
        inputs:
          command: 'build'
          projects: 'System.Maui.Blazor.sln'
          arguments: '-c $(BuildConfiguration)'
          
      - task: Bash@3
        displayName: 'Version Script'
        inputs:
          targetType: 'inline'
          script: |
            echo '$(Build_BuildID)' $BUILD_BUILDID
                    BUILDNUMBER=$BUILD_BUILDID
                    VERSION=0.2.$BUILDNUMBER-beta
                    echo 'VERSION ' $VERSION
                    
                    #if ! [ $BRANCH = master ]; then
                    #   VERSION=1.0.$BUILDNUMBER
                    #    echo "##vso[build.updatebuildnumber]$VERSION"
                    #fi;
                    
                    echo "##vso[task.setvariable variable=Version]$VERSION"
      # - task: DotNetCoreCLI@2
      #   displayName: 'Test Blazor'
      #   inputs:
      #     command: 'test'
      #     projects: 'System.Maui.Blazor.sln'
      #     arguments: '-c $(BuildConfiguration)'
      - task: DotNetCoreCLI@2
        displayName: 'Pack Blazor'
        inputs:
          command: 'pack'
          packagesToPack: 'src/System.Maui.Blazor/System.Maui.Blazor.csproj'
          includesymbols: true
          versioningScheme: byEnvVar
          versionEnvVar: VERSION
          arguments: '-c $(BuildConfiguration)'
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: drop

  - job: BuildSystem.MauiMac
    displayName: Build System.Maui Mac
    pool:
      name: Hosted macOS
      vmImage: 'macOS-latest'
      demands:
      - MSBuild
      - Xamarin.Android
      - xcode
      - Xamarin.iOS
      - msbuild

    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: $(DotNetVersion)

    - bash:
        sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MonoVersion)

    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Mac.sln
            
    - task: MSBuild@1
      displayName: 'Build System.Maui'
      inputs:
        solution: 'src/System.Maui/System.Maui.csproj'
        configuration: '$(BuildConfiguration)'
    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui/bin/Debug/netstandard2.0/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build Xamarin.Forms.Loader.csproj'
      inputs:
        solution: 'src/Xamarin.Forms.Loader/Xamarin.Forms.Loader.csproj'
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Android'
      inputs:
        solution: 'src/System.Maui.Android/System.Maui.Android.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Android/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.iOS'
      inputs:
        solution: 'src/System.Maui.iOS/System.Maui.iOS.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.iOS/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Mac'
      inputs:
        solution: 'src/System.Maui.Mac/System.Maui.Mac.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Mac/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia'
      inputs:
        solution: 'src/System.Maui.Skia/System.Maui.Skia.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia/bin/Debug/netstandard2.0/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.Android'
      inputs:
        solution: 'src/System.Maui.Skia.Android/System.Maui.Skia.Android.csproj'
        configuration: '$(BuildConfiguration)'
    
    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia.Android/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.iOS'
      inputs:
        solution: 'src/System.Maui.Skia.iOS/System.Maui.Skia.iOS.csproj'
        configuration: '$(BuildConfiguration)'
    
    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia.iOS/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.Mac'
      inputs:
        solution: 'src/System.Maui.Skia.Mac/System.Maui.Skia.Mac.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia.Mac/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_mac'
        publishLocation: 'Container'

  - job: BuildSystem.MauiWindows
    displayName: Build System.Maui Windows
    pool:
      vmImage: 'windows-2019'
      demands:
      - MSBuild
    
    steps:
    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Windows.sln

    - task: MSBuild@1
      displayName: 'Build System.Maui.UWP'
      inputs:
        solution: 'src/System.Maui.UWP/System.Maui.UWP.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.UWP/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.WPF'
      inputs:
        solution: 'src/System.Maui.WPF/System.Maui.WPF.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.WPF/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.UWP'
      inputs:
        solution: 'src/System.Maui.Skia.UWP/System.Maui.Skia.UWP.csproj'
        configuration: '$(BuildConfiguration)'

    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia.UWP/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: MSBuild@1
      displayName: 'Build System.Maui.Skia.WPF'
      inputs:
        solution: 'src/System.Maui.Skia.WPF/System.Maui.Skia.WPF.csproj'
        configuration: '$(BuildConfiguration)'
    
    - task: CopyFiles@2
      inputs:
        Contents: 'src/System.Maui.Skia.WPF/bin/Debug/System.Maui.*'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop_windows'
        publishLocation: 'Container'

- stage: RunTests
  jobs:
  - job: RunSystem.MauiTests
    displayName: Run System.Maui Tests
    pool:
      vmImage: 'windows-2019'
      demands:
      - MSBuild
      - vstest

    steps:
    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Tests.sln

    - task: MSBuild@1
      displayName: 'Build Tests'
      inputs:
        solution: 'tests/System.Maui.Tests/System.Maui.Tests.csproj'
        configuration: '$(BuildConfiguration)'

    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: |
          **\bin\$(BuildConfiguration)\netcoreapp2.1\System.Maui.Tests.dll
          !**\obj\**
          !**\xunit.runner.visualstudio.testadapter.dll
          !**\xunit.runner.visualstudio.dotnetcore.testadapter.dll
        searchFolder: '$(System.DefaultWorkingDirectory)'
        codeCoverageEnabled: true
        otherConsoleOptions: '/InIsolation'

- stage: BuildSamples
  jobs:
  - job: BuildSamplesAndroid
    displayName: Build System.Maui Android Samples
    pool:
      name: Hosted macOS
      vmImage: 'macOS-latest'
      demands:
      - MSBuild
      - Xamarin.Android

    steps:

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: $(DotNetVersion)

    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)
        
    - bash:
        sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MonoVersion)
    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Mac.sln

    - task: Boots@1
      displayName: 'Set Xamarin.Android'
      inputs:
        uri: $(XamarinAndroidMac)
    - task: XamarinAndroid@1
      displayName: 'Build System.Maui.Android.Sample App'
      inputs:
        projectFile: sample/System.Maui.Android.Sample/System.Maui.Android.Sample.csproj
        configuration: '$(BuildConfiguration)'
        createAppPackage: false

    # - task: XamarinAndroid@1
    #   displayName: 'Build System.Maui.Forms.Android.Sample App'
    #   inputs:
    #     projectFile: sample/Forms/System.Maui.Forms.Sample.Android/System.Maui.Forms.Sample.Android.csproj
    #     configuration: '$(BuildConfiguration)'
    #     createAppPackage: false

  - job: BuildSystem.MauiSamplesiOSMac
    displayName: Build System.Maui iOS and Mac Samples
    pool:
      name: Hosted macOS
      vmImage: 'macOS-latest'
      demands:
      - xcode
      - Xamarin.iOS
      - msbuild

    steps:
    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - bash:
        sudo $AGENT_HOMEDIRECTORY/scripts/select-xamarin-sdk.sh $(MonoVersion)
    - task: Boots@1
      displayName: 'Xamarin.Mac SDK '
      inputs:
        uri: $(MacDownloadUrl)

    - task: Boots@1
      displayName: 'Xamarin.iOS SDK'
      inputs:
        uri: $(iOSUrl)

    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: $(DotNetVersion)

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Mac.sln

    - task: CmdLine@2
      displayName: 'set Xcode 11.2.1'
      inputs:
        script: '/bin/bash -c "echo ''##vso[task.setvariable variable=MD_APPLE_SDK_ROOT;]''$(xcodeRoot);sudo xcode-select --switch $(xcodeRoot)/Contents/Developer"'

    - task: MSBuild@1
      displayName: 'Build iOS'
      inputs:
        solution: 'build/System.Maui-Mac.sln'
        platform: iPhoneSimulator
        configuration: '$(BuildConfiguration)'

    - task: MSBuild@1
      displayName: 'Build Mac'
      inputs:
        solution: 'sample/System.Maui.Mac.Sample/System.Maui.Mac.Sample.csproj'
        configuration: '$(BuildConfiguration)'

  - job: BuildSystem.MauiSamplesWindows
    displayName: Build System.Maui UWP and WPF Samples
    pool:
      vmImage: 'windows-2019'
      demands:
      - MSBuild
    steps:
    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - task: NuGetCommand@2
      displayName: 'NuGet restore'
      inputs:
        restoreSolution: build/System.Maui-Windows.sln
    
    - task: MSBuild@1
      displayName: 'Build UWP Sample'
      inputs:
        solution: 'sample/System.Maui.UWP.Sample/System.Maui.UWP.Sample.csproj'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:AppxPackageSigningEnabled=false'

    - task: MSBuild@1
      displayName: 'Build WPF Sample'
      inputs:
        solution: 'sample/System.Maui.WPF.Sample/System.Maui.WPF.Sample.csproj'
        configuration: '$(BuildConfiguration)'
        msbuildArguments: '/p:AppxPackageSigningEnabled=false'


- stage: NugetPackPublish
  jobs:
  - job: DownloadArtifacts
    displayName: Download Artifacts from Build Stage
    pool:
      vmImage: 'windows-2019'
      demands:
      - MSBuild

    steps:
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        targetPath: '$(Pipeline.Workspace)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Pipeline.Workspace)/drop_windows'
        Contents: '**'
        TargetFolder: '$(Build.SourcesDirectory)'
    
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Pipeline.Workspace)/drop_mac'
        Contents: '**'
        TargetFolder: '$(Build.SourcesDirectory)'

    - task: Bash@3
      displayName: 'Version Script'
      inputs:
        targetType: 'inline'
        script: |
          echo '$(Build_BuildID)' $BUILD_BUILDID
                  BUILDNUMBER=$BUILD_BUILDID
                  VERSION=0.2.$BUILDNUMBER-beta
                  echo 'VERSION ' $VERSION
                  
                  #if ! [ $BRANCH = master ]; then
                  #   VERSION=1.0.$BUILDNUMBER
                  #    echo "##vso[build.updatebuildnumber]$VERSION"
                  #fi;
                  
                  echo "##vso[task.setvariable variable=Version]$VERSION"
    
    - task: NuGetToolInstaller@1
      displayName: Use Nuget $(NugetVersion)
      inputs:
        versionSpec: $(NugetVersion)

    - task: NuGetCommand@2
      displayName: 'nuget pack System.Maui.nuspec'
      inputs:
        command: pack
        packagesToPack: 'System.Maui.nuspec'
        includeSymbols: true
        versioningScheme: byEnvVar
        versionEnvVar: VERSION


    - bash:
        nuget pack System.Maui.Skia.nuspec -Properties "System.MauiVersion=$(VERSION)" -Symbols -version $(VERSION) -NonInteractive -OutputDirectory "$(Build.ArtifactStagingDirectory)"

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**\*.nupkg;**\*.snupkg;**/*.symbols.nupkg'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'nuget'
        publishLocation: 'Container'
